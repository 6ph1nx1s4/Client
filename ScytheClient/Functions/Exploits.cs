using VRC;
using Obfuscation = System.Reflection.ObfuscationAttribute;
//using VRC.SDKBase;
//using ScytheStation.Components.Extensions;
//using ScytheStation.Components;
//using ScytheStation.Core.Wrappers;
//using ExitGames.Client.Photon;
//using UnityEngine;
//using Il2CppSystem;
//using BitConverter = System.BitConverter;
//using System.Collections;
//using System;

namespace ScytheStation.Functions
{
    internal class Exploits
    {
        [Obfuscation(Exclude = false)]
        public static void AllowCloning()
        {
            try
            {
                foreach (var player in PlayerManager.prop_PlayerManager_0.field_Private_List_1_Player_0)
                {
                    if (player.prop_APIUser_0.allowAvatarCopying.Equals(false))
                    {
                        player.prop_APIUser_0.allowAvatarCopying = true;
                    }
                }
            }
            catch { }
        }
		//private static IEnumerator EarrapeExploit()
  //      {
  //          // W.I.P
		//	while (MainSettings.E1) 
		//	{
  //              yield return new WaitForSecondsRealtime(0.03f);
  //          }
		//	yield break;
		//}
	}
}
