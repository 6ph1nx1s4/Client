//using System;
//using System.Collections;
//using MelonLoader;
//using ScytheStation.Core.Wrappers;
//using UnityEngine;
//using Il2CppSystem.Collections.Generic;
//using VRC.SDKBase;

namespace ScytheStation.Functions
{
    internal class Exploits
    {
        //public static void UdonAssOn()
        //{
        //    MelonLogger.Msg(ConsoleColor.Blue, "[EXPLOITS] Udon is now being raped");
        //    Exploits.udonasstoggled = true;
        //    MelonCoroutines.Start(Exploits.UdonKill());
        //}
        //public static void UdonAssOff()
        //{
        //    MelonLogger.Msg(ConsoleColor.DarkBlue, "[EXPLOITS] Udon is now being saved from being raped");
        //    Exploits.udonasstoggled = false;
        //}
        //public static IEnumerator UdonKill()
        //{
        //    while (Exploits.udonasstoggled)
        //    {
        //        int num;
        //        for (int i = 0; i < PlayerWrappers.GetAllPlayers().Length; i = num + 1)
        //        {
        //            if (!(PlayerWrappers.GetAllPlayers()[i].GetAPIUser().id == PlayerWrappers.LocalPlayer().GetAPIUser().id))
        //            {
        //                for (int j = 0; j < WorldWrappers.udonBehaviours.Length; j = num + 1)
        //                {
        //                    foreach (string text in WorldWrappers.udonBehaviours[j]._eventTable.Keys)
        //                    {
        //                        Networking.SetOwner(PlayerWrappers.GetAllPlayers()[i].GetVRCPlayerApi(), WorldWrappers.udonBehaviours[j].gameObject);
        //                        WorldWrappers.udonBehaviours[j].SendCustomNetworkEvent(i, text);
        //                        yield return new WaitForSeconds(0.25f);
        //                    }
        //                    Dictionary<string, List<uint>>.KeyCollection.Enumerator enumerator = null;
        //                    yield return new WaitForSeconds(0.25f);
        //                    if (!Exploits.udonasstoggled)
        //                    {
        //                        break;
        //                    }
        //                    num = j;
        //                }
        //                yield return new WaitForSeconds(0.25f);
        //                if (!Exploits.udonasstoggled)
        //                {
        //                    break;
        //                }
        //            }
        //            num = i;
        //        }
        //        yield return new WaitForSeconds(0.25f);
        //    }
        //    yield break;
        //}
        //public static bool udonasstoggled;
    }
}
